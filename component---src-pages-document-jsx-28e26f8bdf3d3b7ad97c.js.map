{"version":3,"sources":["webpack:///./src/components/top/index.jsx","webpack:///./src/components/header/index.jsx","webpack:///./src/components/document/left-menu/index.jsx","webpack:///./src/layout/document.jsx","webpack:///./src/pages/document.jsx"],"names":["Top","title","location","rootPath","isRoot","pathname","className","to","Header","LeftMenu","DocumentLayout","posts","children","publishedPost","Map","console","log","forEach","p","category","node","frontmatter","has","set","get","Fragment","JSON","stringify","pageQuery","data","siteMetadata","site","edges","allMarkdownRemark"],"mappings":"gQAMaA,G,oBAAM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/BC,EAASF,EAASG,WAAaF,EACrC,OACE,yBAAKG,UAAU,OACXF,EAKA,kBAAC,OAAD,CAAMG,GAAE,IAAOD,UAAU,QAAzB,gCAJA,kBAAC,OAAD,CAAMC,GAAE,IAAOD,UAAU,QACtBL,GAOL,kBAAC,OAAD,CAAMM,GAAE,QAAWD,UAAU,SAA7B,a,kCCnBN,uEAKaE,GALb,UAKsB,SAAC,GAAmC,IAAjCP,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAExC,OADeD,EAASG,WAAaF,GAGjC,wBAAIG,UAAU,eACZ,kBAAC,OAAD,CAAMC,GAAE,IAAOD,UAAU,QACtBL,O,gJCPEQ,G,UAAW,WACpB,OACA,oCACI,2BAAOH,UAAU,aACb,4BACI,uCCDHI,G,UAAiB,SAAC,GAA0C,IAAxCR,EAAuC,EAAvCA,SAAUD,EAA6B,EAA7BA,MAAOU,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAMjDC,EAAgB,IAAIC,IAgB1B,OAfAC,QAAQC,IAAIL,GAEZA,EAAMM,SAAQ,SAAAC,GACZ,IAAMC,EAAWD,EAAEE,KAAKC,YAAYF,SACpCJ,QAAQC,IAAIE,EAAEE,KAAKC,YAAYpB,OAC5BY,EAAcS,IAAIH,GACnBN,EAAcU,IAAIJ,EAAlB,sBACMN,EAAcW,IAAIL,IADxB,CACmCD,EAAEE,KAAKC,YAAYpB,SAEtDY,EAAcU,IAAIJ,EAAU,OAIhCJ,QAAQC,IAAIH,GAGV,kBAAC,IAAMY,SAAP,KACE,kBAAC,IAAD,CAAKxB,MAAOA,EAAOC,SAAUA,EAAUC,SAvB7B,MAwBV,6BACE,kBAAC,IAAD,CAAQF,MAAOA,EAAOC,SAAUA,EAAUC,SAzBlC,MA0BR,yBAAKG,UAAU,iBACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,SACZM,EACAc,KAAKC,UAAUd,SCrBfe,GAfE,sBAAuB,IAArBC,EAAoB,EAApBA,KAAM3B,EAAc,EAAdA,SAEX4B,EAAiBD,EAAKE,KAAtBD,aACAE,EAAUH,EAAKI,kBAAfD,MAER,OACI,kBAAC,EAAD,CAAgB9B,SAAWA,EACvBD,MAAO6B,EAAa7B,MACpBU,MAAOqB,KAOG,e","file":"component---src-pages-document-jsx-28e26f8bdf3d3b7ad97c.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GitHubIcon } from '../social-share/github-icon'\n\nimport './index.scss'\n\nexport const Top = ({ title, location, rootPath }) => {\n  const isRoot = location.pathname === rootPath\n  return (\n    <div className=\"top\">\n      {!isRoot ? (\n        <Link to={`/`} className=\"link\">\n          {title}\n        </Link>\n      ) : (\n        <Link to={`/`} className=\"link\">\n          Is it better than yesterday?\n        </Link>\n      )}\n      <Link to={`/list`} className=\"right\">\n        INDEX\n      </Link>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nexport const Header = ({ title, location, rootPath }) => {\n  const isRoot = location.pathname === rootPath\n  return (\n    isRoot && (\n      <h1 className=\"home-header\">\n        <Link to={`/`} className=\"link\">\n          {title}\n        </Link>\n      </h1>\n    )\n  )\n}\n","import React from 'react';\n\nimport './index.scss'\n\nexport const LeftMenu = () => {\n    return (\n    <>\n        <aside className=\"left-menu\">\n            <ul>\n                <li>1번</li>\n            </ul>\n        </aside>\n    </>\n    )\n}","import React from 'react';\n\nimport { Top } from '../components/top';\nimport { Header } from '../components/header';\nimport { LeftMenu } from '../components/document/left-menu';\n\nimport './document.scss';\n\nexport const DocumentLayout = ({ location, title, posts, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n\n  // 왼쪽 메뉴는 카테고리 기준으로 묶고 그리고 데이트 별로 정렬하고\n  // ul 안에 li에 하나씩 묶고 거기 안에 리스트 출력 되네\n\n  const publishedPost = new Map();\n  console.log(posts);\n  \n  posts.forEach(p => {\n    const category = p.node.frontmatter.category;\n    console.log(p.node.frontmatter.title);\n    if(publishedPost.has(category)) {\n      publishedPost.set(category, \n        [...publishedPost.get(category), p.node.frontmatter.title]);\n    } else {\n      publishedPost.set(category, []);\n    }\n  });\n\n  console.log(publishedPost);\n\n  return (\n    <React.Fragment>\n      <Top title={title} location={location} rootPath={rootPath} />\n      <div>\n        <Header title={title} location={location} rootPath={rootPath} />\n        <div className=\"document-area\">\n          <div className=\"left\">\n            <LeftMenu />\n          </div>\n          <div className=\"right\">\n            {children}\n            {JSON.stringify(publishedPost)}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport { DocumentLayout } from '../layout/document';\n\nexport default ({data, location}) => {\n\n    const { siteMetadata } = data.site;\n    const { edges } = data.allMarkdownRemark;\n\n    return (\n        <DocumentLayout location={ location }\n            title={siteMetadata.title }\n            posts={edges}\n            >\n        </DocumentLayout>\n    )\n}\n\n\nexport const pageQuery = graphql `\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { \n                frontmatter: { \n                    category: { ne: null },\n                    draft: { eq: false },\n                    type: { eq: \"document\" }\n                }\n               \n            }\n          ) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                frontmatter {\n                  date(formatString: \"MMMM DD, YYYY\")\n                  title\n                  category\n                  draft\n                }\n              }\n            }\n          }\n    }\n`"],"sourceRoot":""}