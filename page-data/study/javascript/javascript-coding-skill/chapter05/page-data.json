{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/study/javascript/javascript-coding-skill/chapter05/","result":{"data":{"site":{"siteMetadata":{"title":"{ 모리 막장저장소 }","author":"kwonmory","siteUrl":"https://blog.kwonmory.com","comment":{"disqusShortName":"","utterances":"kwonmory/kwonmory.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f065691a-fc53-5806-be68-661ec04f1a5b","excerpt":"본 글은 자바스크립트 코딩의 기술을 보고 필요한 부분만 정리되어있으며 제 생각이 적혀있어 정확하지 않을 수도 있습니다.(피드백 주세요:-))\n초기 20년 6월 3일에 작성되었으며 블로그를 이전하면서 제 생각을 추가하여 재작성하고 있습니다. 반복문을 단순하게 만들어라 화살표 함수로 반복문을 단순하게 만들어라 단순하게 화살표 함수에 대해서 소개함 화살표 함수 배열 메서드로 반복문을 짧게 작성하라 배열 메서드는 배열을 조작하는 메서드이다. 종류로는 다음 메서드들이 있다. map() sort…","html":"<blockquote>\n<p>본 글은 <a href=\"http://www.yes24.com/Product/Goods/85019231?Acode=101\">자바스크립트 코딩의 기술</a>을 보고 필요한 부분만 정리되어있으며 제 생각이 적혀있어 정확하지 않을 수도 있습니다.(피드백 주세요:-))\n초기 20년 6월 3일에 작성되었으며 블로그를 이전하면서 제 생각을 추가하여 재작성하고 있습니다.</p>\n</blockquote>\n<h1 id=\"반복문을-단순하게-만들어라\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EB%8B%A8%EC%88%9C%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"반복문을 단순하게 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문을 단순하게 만들어라</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;Quiz&gt;\n  1. 배열 메서드 종류는 무엇이 있나요 6가지\n  2. 커링이란 무엇인가요\n  3. for in 과 for of의 차이는 무엇인가요\n&lt;/Quiz&gt;</code></pre></div>\n<h2 id=\"화살표-함수로-반복문을-단순하게-만들어라\" style=\"position:relative;\"><a href=\"#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EB%8B%A8%EC%88%9C%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"화살표 함수로 반복문을 단순하게 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화살표 함수로 반복문을 단순하게 만들어라</h2>\n<p>단순하게 화살표 함수에 대해서 소개함</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Functions/%EC%95%A0%EB%A1%9C%EC%9A%B0_%ED%8E%91%EC%85%98\">화살표 함수</a></p>\n<h2 id=\"배열-메서드로-반복문을-짧게-작성하라\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EC%A7%A7%EA%B2%8C-%EC%9E%91%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"배열 메서드로 반복문을 짧게 작성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 메서드로 반복문을 짧게 작성하라</h2>\n<p>배열 메서드는 배열을 조작하는 메서드이다.</p>\n<p>종류로는 다음 메서드들이 있다.</p>\n<ul>\n<li>map()</li>\n<li>sort()</li>\n<li>filter()</li>\n<li>find()</li>\n<li>forEach()</li>\n<li>reduce()</li>\n<li><code class=\"language-text\">let</code>의 블록 유효범위 때문에 컬렉션을 반복문 밖에 선언해야된다는 문제</li>\n<li>새로운 컬렉션을 선언하고 사용해야되는 문제</li>\n<li>배열의 길이를 변경하거나 배열 내 데이터 형태를 변경하는 등 한 번에 한 가지 기능만 하는게 제일 좋음</li>\n</ul>\n<h3 id=\"code-classlanguage-textmapcode메서드로-비슷한-길이의-배열을-생성하라\" style=\"position:relative;\"><a href=\"#code-classlanguage-textmapcode%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%B9%84%EC%8A%B7%ED%95%9C-%EA%B8%B8%EC%9D%B4%EC%9D%98-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"code classlanguage textmapcode메서드로 비슷한 길이의 배열을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">map()</code>메서드로 비슷한 길이의 배열을 생성하라</h3>\n<p>map 쓰는 방법에 대해서 소개했다. 자세한건 MDN!</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">array map()</a></p>\n<h3 id=\"code-classlanguage-textfiltercode와-code-classlanguage-textfindcode로-데이터의-부분집합을-생성하라\" style=\"position:relative;\"><a href=\"#code-classlanguage-textfiltercode%EC%99%80-code-classlanguage-textfindcode%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EB%B6%80%EB%B6%84%EC%A7%91%ED%95%A9%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"code classlanguage textfiltercode와 code classlanguage textfindcode로 데이터의 부분집합을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">filter()</code>와 <code class=\"language-text\">find()</code>로 데이터의 부분집합을 생성하라</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">array filter()</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">array find()</a></li>\n</ul>\n<p><code class=\"language-text\">find()</code>는 조건에 맞는 값의 첫번째 항목을 반환한다.</p>\n<p>반대로 항목이 없으면 undefined를 반환함</p>\n<h3 id=\"커링\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%81\" aria-label=\"커링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커링</h3>\n<ul>\n<li><a href=\"https://ko.javascript.info/currying-partials\">커링</a></li>\n</ul>\n<p>커링이라고 하는 것은 여러개 인자를 받는 함수를 한 개씩 인자를 받게 만드는 것이다. 즉, 단일 호출로 처리하는 함수를 각각의 인수를 전달해서 호출하는 프로세스이다.</p>\n<p>커링을 이용하면 인수를 미리 고정시켜서 사용할 수 있다. 이를 부분 적용이라고 한다.</p>\n<p>커링은 매개변수를 강조할 수 있다는 점과 인자 중간중간에 개입할 수 있는 여지를 줄 수 있는 테크닉이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">findByLibaray</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">library</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">instructor</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> instructor<span class=\"token punctuation\">.</span>libraries<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>library<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> librarian <span class=\"token operator\">=</span> instructors<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">findByLibrary</span><span class=\"token punctuation\">(</span><span class=\"token string\">'도서관'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"foreach로-동일한-동작을-적용하라\" style=\"position:relative;\"><a href=\"#foreach%EB%A1%9C-%EB%8F%99%EC%9D%BC%ED%95%9C-%EB%8F%99%EC%9E%91%EC%9D%84-%EC%A0%81%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"foreach로 동일한 동작을 적용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>forEach()로 동일한 동작을 적용하라</h2>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\">array forEach()</a></p>\n<p><code class=\"language-text\">forEach()</code>는 반환값이 없다.</p>\n<p><code class=\"language-text\">return</code>구문을 사용하면 해당 턴은 넘어간다.</p>\n<h2 id=\"체이닝으로-메서드를-연결하라\" style=\"position:relative;\"><a href=\"#%EC%B2%B4%EC%9D%B4%EB%8B%9D%EC%9C%BC%EB%A1%9C-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EC%97%B0%EA%B2%B0%ED%95%98%EB%9D%BC\" aria-label=\"체이닝으로 메서드를 연결하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>체이닝으로 메서드를 연결하라</h2>\n<p>다음과 같이 메서드를 점연산자(.)을 통해 연결하라는 의미</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"reduce로-배열-데이터를-변환하라\" style=\"position:relative;\"><a href=\"#reduce%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%B3%80%ED%99%98%ED%95%98%EB%9D%BC\" aria-label=\"reduce로 배열 데이터를 변환하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reduce()로 배열 데이터를 변환하라</h2>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\">array reduce()</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"forin-문과-forof-문으로-반복문을-정리하라\" style=\"position:relative;\"><a href=\"#forin-%EB%AC%B8%EA%B3%BC-forof-%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EC%A0%95%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"forin 문과 forof 문으로 반복문을 정리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>for…in 문과 for…of 문으로 반복문을 정리하라</h2>\n<p>for…in은 객체 순환에 주로 사용되고,</p>\n<p>for…of은 배열 순환에 주로 사용된다.</p>\n<p>즉, 쉽게 생각하면 for in은 키값을 출력하고, for of는 벨류값을 출력한다.</p>\n<h3 id=\"for-in\" style=\"position:relative;\"><a href=\"#for-in\" aria-label=\"for in permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>for in</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  c<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token comment\">// a, b, c</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"for-of\" style=\"position:relative;\"><a href=\"#for-of\" aria-label=\"for of permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>for of</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1, 2, 3</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"JCS - 반복문을 단순하게 만들어라","date":"09월 25일, 2020"}}},"pageContext":{"slug":"/study/javascript/javascript-coding-skill/chapter05/","previous":{"fields":{"slug":"/change-to-my-language/javascript-arrays-creating/"},"frontmatter":{"title":"(CTML) 자바스크립트 배열 알아가기(생성하기편)","category":"CTML","draft":false,"type":null}},"next":{"fields":{"slug":"/study/javascript/javascript-coding-skill/chapter06/"},"frontmatter":{"title":"JCS - 매개변수와 return 문을 정리하라","category":"book-javascript-coding-skill","draft":false,"type":null}}}},"staticQueryHashes":["3128451518","911025623"]}