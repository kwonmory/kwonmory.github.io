{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/study/javascript/core-javascript-group-study-draft/file-and-file-reader/","result":{"data":{"site":{"siteMetadata":{"title":"{ 모리 막장저장소 }","author":"kwonmory","siteUrl":"https://blog.kwonmory.com","comment":{"disqusShortName":"","utterances":"kwonmory/kwonmory.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7f990418-b222-554c-b58e-a025c9fa04db","excerpt":"시작하기 File은 Blob을 상속 받는다. fileParts : Blob, BufferSource, String 값 fileName : 파일이름 options : 옵션(lastModified 와 같은 것) 파일은 input type file 을 통해서 받을 수 있고 그걸 가지고 조작도 가능하다. name과 lastModified를 통해 속성값도 알 수 있다. File은 다중 파일이 될 수 있으니 배열로 되어있다. FileReader Blob이나 File…","html":"<h1 id=\"시작하기\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기</h1>\n<p>File은 Blob을 상속 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>fileParts<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>fileParts : Blob, BufferSource, String 값</li>\n<li>fileName : 파일이름</li>\n<li>options : 옵션(lastModified 와 같은 것)</li>\n</ul>\n<p>파일은 input type file 을 통해서 받을 수 있고 그걸 가지고 조작도 가능하다.</p>\n<p>name과 lastModified를 통해 속성값도 알 수 있다.</p>\n<p>File은 다중 파일이 될 수 있으니 배열로 되어있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">input<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"filereader\" style=\"position:relative;\"><a href=\"#filereader\" aria-label=\"filereader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FileReader</h2>\n<p>Blob이나 File로 된 데이터를 읽을 수 있는 객체이다.</p>\n<p><code class=\"language-text\">let reader = new FileReader();</code></p>\n<p>다양한 메서드들이 있다. 메서드명을 보고 얼추 추측이 가능하다.</p>\n<ul>\n<li>readAsArrayBuffer(blob)</li>\n<li>readAsText(blob, [encoding])</li>\n<li>readAsDataURL(blob)</li>\n<li>abort() : 명령 취소</li>\n</ul>\n<p>그리고 각 리딩하는 처리 이벤트들이 있다. 이름만 봐도 다 알 수 있다.</p>\n<ul>\n<li>loadstart</li>\n<li>progress</li>\n<li>load</li>\n<li>abort</li>\n<li>error</li>\n<li>loadend</li>\n</ul>\n<p>만약 리딩이 끝나면 <code class=\"language-text\">reader.result</code>, <code class=\"language-text\">reader.error</code>를 통해서 접근할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">readFile</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> file <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsText</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"GS - File and FileReader","date":"10월 12일, 2020"}}},"pageContext":{"slug":"/study/javascript/core-javascript-group-study-draft/file-and-file-reader/","previous":{"fields":{"slug":"/study/javascript/core-javascript-group-study-draft/blob/"},"frontmatter":{"title":"GS - Blob","category":"gs-core-javascript","draft":false,"type":null}},"next":{"fields":{"slug":"/study/javascript/core-javascript-group-study-draft/fetch/"},"frontmatter":{"title":"GS - Fetch","category":"gs-core-javascript","draft":false,"type":null}}}},"staticQueryHashes":["3128451518","911025623"]}