{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/javascript-coding-skill/","result":{"data":{"site":{"siteMetadata":{"title":"{ 모리 막장저장소 }","author":"kwonmory","siteUrl":"https://kwonmory.github.io","comment":{"disqusShortName":"","utterances":"kwonmory/kwonmory.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"2f4f7f3a-6c24-53d0-9083-1dbde89b9d38","excerpt":"본 글은 자바스크립트 코딩의 기술을 보고 정리한 글입니다.\n모든 내용을 담지 않고 제가 필요한 부분만 담았습니다. 변수 할당으로 의도를 표현하라 const로 변하지 않는 값을 표현하라  10만 줄의 긴 코드가 있다고 가정할 때, var 키워드로 변수를 사용하는 방법과 const 키워드로 변수를 사용하는 방법 중 큰 차이가 있을 것이다. 그 중 변수가 중간에 변경 되어버리면 그 부분을 찾기가 어려워서 유지보수하기 어려운 코드로 점점 가게 된다.  최근에 let 을 사용하지 않고 const…","html":"<blockquote>\n<p>본 글은 <a href=\"http://www.yes24.com/Product/Goods/85019231?Acode=101\">자바스크립트 코딩의 기술</a>을 보고 정리한 글입니다.\n모든 내용을 담지 않고 제가 필요한 부분만 담았습니다.</p>\n</blockquote>\n<h1 id=\"변수-할당으로-의도를-표현하라\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%ED%95%A0%EB%8B%B9%EC%9C%BC%EB%A1%9C-%EC%9D%98%EB%8F%84%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%98%EB%9D%BC\" aria-label=\"변수 할당으로 의도를 표현하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 할당으로 의도를 표현하라</h1>\n<h2 id=\"const로-변하지-않는-값을-표현하라\" style=\"position:relative;\"><a href=\"#const%EB%A1%9C-%EB%B3%80%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B0%92%EC%9D%84-%ED%91%9C%ED%98%84%ED%95%98%EB%9D%BC\" aria-label=\"const로 변하지 않는 값을 표현하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>const로 변하지 않는 값을 표현하라</h2>\n<p><code class=\"language-text\">[2회독]</code> 10만 줄의 긴 코드가 있다고 가정할 때, var 키워드로 변수를 사용하는 방법과 const 키워드로 변수를 사용하는 방법 중 큰 차이가 있을 것이다. 그 중 변수가 중간에 변경 되어버리면 그 부분을 찾기가 어려워서 유지보수하기 어려운 코드로 점점 가게 된다.</p>\n<p><code class=\"language-text\">[2회독]</code> 최근에 let 을 사용하지 않고 const 만 사용하는 기술을 배웠는데, 자주 애용해야겠다.</p>\n<p><code class=\"language-text\">[2회독]</code> const 는 재할당은 할 수 없지만, 값을 바꿀 수 있다.(객체)</p>\n<h2 id=\"let-과-const-로-유효-범위스코프-충돌을-줄여라\" style=\"position:relative;\"><a href=\"#let-%EA%B3%BC-const-%EB%A1%9C-%EC%9C%A0%ED%9A%A8-%EB%B2%94%EC%9C%84%EC%8A%A4%EC%BD%94%ED%94%84-%EC%B6%A9%EB%8F%8C%EC%9D%84-%EC%A4%84%EC%97%AC%EB%9D%BC\" aria-label=\"let 과 const 로 유효 범위스코프 충돌을 줄여라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>let 과 const 로 유효 범위(스코프) 충돌을 줄여라</h2>\n<ul>\n<li>var 는 렉시컬 스코프(+함수 스코프)를 따르는 반면, let 은 블록 스코프를 따른다.</li>\n</ul>\n<h2 id=\"블록-유효-범위-변수로-정보를-격리하라\" style=\"position:relative;\"><a href=\"#%EB%B8%94%EB%A1%9D-%EC%9C%A0%ED%9A%A8-%EB%B2%94%EC%9C%84-%EB%B3%80%EC%88%98%EB%A1%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EA%B2%A9%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"블록 유효 범위 변수로 정보를 격리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록 유효 범위 변수로 정보를 격리하라</h2>\n<ul>\n<li>\n<p>호이스팅을 방지할 수 있음</p>\n<ul>\n<li>특히 반복문에 var 를 사용하게 되면 호이스팅으로 문제가 발생</li>\n<li>해결방법으로 즉시실행함수를 넣는 방법이 있음</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">[2회독]</code> var 를 이용할 경우, 변수를 설정한 시점이 아니라 호출한 시점의 값이 반환된다.</p>\n<p><code class=\"language-text\">[2회독]</code> 해결 방안으로 클로저, 고차함수, 즉시실행함수 들이 있다.</p>\n<h2 id=\"템플릿-리터럴로-변수를-읽을-수-있는-문자열로-변환하라\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4%EB%A1%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9D%BD%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EB%9D%BC\" aria-label=\"템플릿 리터럴로 변수를 읽을 수 있는 문자열로 변환하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 리터럴로 변수를 읽을 수 있는 문자열로 변환하라</h2>\n<ul>\n<li>그냥 사용하면 편리하고 코드를 직관적으로 깔끔하게 구성할 수 있는 정도</li>\n</ul>\n<h2 id=\"참고-코드\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%BD%94%EB%93%9C\" aria-label=\"참고 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 코드</h2>\n<p><code class=\"language-text\">[2회독]</code> 즉시실행 함수를 이용하여 변수 잠가놓기</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addClikc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> items<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h1 id=\"배열로-데이터-컬렉션을-관리하라\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%BB%AC%EB%A0%89%EC%85%98%EC%9D%84-%EA%B4%80%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"배열로 데이터 컬렉션을 관리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열로 데이터 컬렉션을 관리하라</h1>\n<h2 id=\"배열로-유연한-컬렉션을-생성하라\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%A1%9C-%EC%9C%A0%EC%97%B0%ED%95%9C-%EC%BB%AC%EB%A0%89%EC%85%98%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"배열로 유연한 컬렉션을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열로 유연한 컬렉션을 생성하라</h2>\n<ul>\n<li>\n<p>펼침 연산자를 이용하여 배열을 새로 만들어서 조작하면 기존 배열에 건들지 않을 수 있다.</p>\n<ul>\n<li>예로 <code class=\"language-text\">return [...items].sort()</code></li>\n</ul>\n</li>\n<li>map, filter, reduce f를 사용하자.</li>\n<li>객체를 순회하려면 Object.keys() 를 이용하자.</li>\n<li>배열은 이터러블 프로토콜을 따르고 있다.</li>\n</ul>\n<p><code class=\"language-text\">[2회독]</code> 배열에 이터러블이 내장되어있다고 표현하고 있음\n이터러블 : 컬렉션의 현재 위치를 알고 있는 상태에서 컬렉션의 항목을 한 번에 하나씩 처리하는 방법</p>\n<p><code class=\"language-text\">[2회독]</code> Object.entries() 를 기억하자.</p>\n<h2 id=\"includes-로-존재-여부를-확인하라\" style=\"position:relative;\"><a href=\"#includes-%EB%A1%9C-%EC%A1%B4%EC%9E%AC-%EC%97%AC%EB%B6%80%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%98%EB%9D%BC\" aria-label=\"includes 로 존재 여부를 확인하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Includes() 로 존재 여부를 확인하라</h2>\n<ul>\n<li>기존 indexOf() 를 통해 위치를 파악했는데, 만약 첫번째 위치인 pos 가 0 일 때, 0 은 falsy 값이라 주의해야했어야했다.</li>\n<li>includes() 는 ES2016 명세</li>\n<li>반환값은 indexOf와 다르게 boolean 값이다.</li>\n</ul>\n<h2 id=\"펼침-연산자로-배열을-본떠라\" style=\"position:relative;\"><a href=\"#%ED%8E%BC%EC%B9%A8-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%B3%B8%EB%96%A0%EB%9D%BC\" aria-label=\"펼침 연산자로 배열을 본떠라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>펼침 연산자로 배열을 본떠라</h2>\n<ul>\n<li>조작(mutation) 과 부수효과(side effect) 로 인한 문제를 피할 수 있다.</li>\n<li>splice() 는 원본 배열을 조작하는 단점이 있다.</li>\n</ul>\n<p><code class=\"language-text\">[2회독]</code> 펼침 연산자의 기능 : 배열에 포함된 항목을 목록으로 바꿔줌</p>\n<p><code class=\"language-text\">[2회독]</code> splice() 쓰는 방법, concat() 쓰는 방법 보다 편리함</p>\n<h2 id=\"push-메서드-대신-펼침-연산자로-원본-변경을-피하라\" style=\"position:relative;\"><a href=\"#push-%EB%A9%94%EC%84%9C%EB%93%9C-%EB%8C%80%EC%8B%A0-%ED%8E%BC%EC%B9%A8-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EC%9B%90%EB%B3%B8-%EB%B3%80%EA%B2%BD%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"push 메서드 대신 펼침 연산자로 원본 변경을 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>push() 메서드 대신 펼침 연산자로 원본 변경을 피하라</h2>\n<ul>\n<li>사이드 이펙트가 없는 코드를 작성해야한다.</li>\n<li>slice() 로 새로운 배열을 생성할 수 있다.</li>\n</ul>\n<h2 id=\"펼침-연산자로-정렬에-의한-혼란을-피하라\" style=\"position:relative;\"><a href=\"#%ED%8E%BC%EC%B9%A8-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EC%A0%95%EB%A0%AC%EC%97%90-%EC%9D%98%ED%95%9C-%ED%98%BC%EB%9E%80%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"펼침 연산자로 정렬에 의한 혼란을 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>펼침 연산자로 정렬에 의한 혼란을 피하라</h2>\n<ul>\n<li>기본적으로 sort() 는 배열을 조작하게 된다.</li>\n</ul>\n<h2 id=\"기타\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80\" aria-label=\"기타 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타</h2>\n<h3 id=\"tc39-위원회\" style=\"position:relative;\"><a href=\"#tc39-%EC%9C%84%EC%9B%90%ED%9A%8C\" aria-label=\"tc39 위원회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TC39 위원회</h3>\n<p>자바스크립트 명세를 결정하는 위원회를 말한다.</p>\n<p>검토 단계들이 있는데, 스테이지1, 스테이지2 등으로 부르고 있다.</p>\n<hr>\n<h1 id=\"특수한-컬렉션을-이용해-코드-명료성을-극대화하라\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%88%98%ED%95%9C-%EC%BB%AC%EB%A0%89%EC%85%98%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%BD%94%EB%93%9C-%EB%AA%85%EB%A3%8C%EC%84%B1%EC%9D%84-%EA%B7%B9%EB%8C%80%ED%99%94%ED%95%98%EB%9D%BC\" aria-label=\"특수한 컬렉션을 이용해 코드 명료성을 극대화하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특수한 컬렉션을 이용해 코드 명료성을 극대화하라</h1>\n<h2 id=\"객체를-이용해-정적인-키-값을-탐색하라\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%A0%95%EC%A0%81%EC%9D%B8-%ED%82%A4-%EA%B0%92%EC%9D%84-%ED%83%90%EC%83%89%ED%95%98%EB%9D%BC\" aria-label=\"객체를 이용해 정적인 키 값을 탐색하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체를 이용해 정적인 키-값을 탐색하라</h2>\n<p>객체가 정적인 정보에 적합하다.</p>\n<p>프로그래밍적으로도 객체를 생성해서 사용할 수 있다.</p>\n<h2 id=\"objectassign-으로-조작-없이-객체를-생성하라\" style=\"position:relative;\"><a href=\"#objectassign-%EC%9C%BC%EB%A1%9C-%EC%A1%B0%EC%9E%91-%EC%97%86%EC%9D%B4-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"objectassign 으로 조작 없이 객체를 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object.assign() 으로 조작 없이 객체를 생성하라</h2>\n<p>중첩된 객체를 피하는 방법 두가지</p>\n<ul>\n<li>Object.assgin() 을 많이 쓰는 방법…</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    defaultValue<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> defualtValue<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>lodash 라이브러리 cloneDeep() 사용하는 방법</li>\n<li>객체 펼침 연산자 이용하기</li>\n</ul>\n<h2 id=\"객체-펼침-연산자로-정보를-갱신하라\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%8E%BC%EC%B9%A8-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EA%B0%B1%EC%8B%A0%ED%95%98%EB%9D%BC\" aria-label=\"객체 펼침 연산자로 정보를 갱신하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 펼침 연산자로 정보를 갱신하라</h2>\n<ul>\n<li>어쨋든 간에 깊은 복사는 똑같이 처리해줘야함, 단지 보기 편할 뿐</li>\n</ul>\n<h2 id=\"맵으로-명확하게-키-값-데이터를-갱신하라\" style=\"position:relative;\"><a href=\"#%EB%A7%B5%EC%9C%BC%EB%A1%9C-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-%ED%82%A4-%EA%B0%92-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%B0%B1%EC%8B%A0%ED%95%98%EB%9D%BC\" aria-label=\"맵으로 명확하게 키 값 데이터를 갱신하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맵으로 명확하게 키-값 데이터를 갱신하라</h2>\n<ul>\n<li>키-값 쌍이 자주 추가되거나 삭제되는 경우</li>\n<li>키가 문자열이 아닌 경우</li>\n</ul>\n<p>메서드 체이닝이 가능함</p>\n<p>Map 을 하나의 요소로 생각하고 사용할 수도 있네.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> filters <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'babo'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>제거는 delete(key) 로 하면 된다.</p>\n<p>모두 제거는 clear()</p>\n<p>객체의 키가 숫자 일경우 유용함</p>\n<h2 id=\"맵과-펼침-연산자로-키-값-데이터르-순회하라\" style=\"position:relative;\"><a href=\"#%EB%A7%B5%EA%B3%BC-%ED%8E%BC%EC%B9%A8-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%ED%82%A4-%EA%B0%92-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%B4-%EC%88%9C%ED%9A%8C%ED%95%98%EB%9D%BC\" aria-label=\"맵과 펼침 연산자로 키 값 데이터르 순회하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맵과 펼침 연산자로 키-값 데이터르 순회하라</h2>\n<p>Object.keys() 로 순회했었음.</p>\n<p>객체에서 순서가 보장되지 않음</p>\n<p>맵은 for of 으로 키와 값을 동시에 뽑아내서 사용할 수 있음</p>\n<p>맵에 펼침 연산자를 이용해서 배열로 만들고 그걸 가지고 정렬 할 수 있다.</p>\n<h2 id=\"맵-생성-시-부수-효과를-피하라\" style=\"position:relative;\"><a href=\"#%EB%A7%B5-%EC%83%9D%EC%84%B1-%EC%8B%9C-%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"맵 생성 시 부수 효과를 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맵 생성 시 부수 효과를 피하라</h2>\n<p>Map([…v, …map]) 이렇게 복사본을 만들 수가 있고 여러개의 맵을 합칠 수 있음</p>\n<h2 id=\"세트를-이용해-고윳값을-관리하라\" style=\"position:relative;\"><a href=\"#%EC%84%B8%ED%8A%B8%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EA%B3%A0%EC%9C%B3%EA%B0%92%EC%9D%84-%EA%B4%80%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"세트를 이용해 고윳값을 관리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세트를 이용해 고윳값을 관리하라</h2>\n<p>reduce() 의 두번째 파라미터 초기값으로 new Set() 도 가능하다.</p>\n<hr>\n<h1 id=\"조건문을-깔끔하게-작성하라\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8%EC%9D%84-%EA%B9%94%EB%81%94%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"조건문을 깔끔하게 작성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건문을 깔끔하게 작성하라</h1>\n<h2 id=\"거짓-값이-있는-조건문을-축약하라\" style=\"position:relative;\"><a href=\"#%EA%B1%B0%EC%A7%93-%EA%B0%92%EC%9D%B4-%EC%9E%88%EB%8A%94-%EC%A1%B0%EA%B1%B4%EB%AC%B8%EC%9D%84-%EC%B6%95%EC%95%BD%ED%95%98%EB%9D%BC\" aria-label=\"거짓 값이 있는 조건문을 축약하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>거짓 값이 있는 조건문을 축약하라</h2>\n<p>동등과 일치의 차이 알고 있기</p>\n<p>== 은 동등비교, === 일치비교</p>\n<h3 id=\"동등-관계\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EB%93%B1-%EA%B4%80%EA%B3%84\" aria-label=\"동등 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동등 관계</h3>\n<p>빈문자열은 false 값에 동등이지만 일치하지 않음</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">''</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h3 id=\"거짓-값\" style=\"position:relative;\"><a href=\"#%EA%B1%B0%EC%A7%93-%EA%B0%92\" aria-label=\"거짓 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>거짓 값</h3>\n<ul>\n<li>false</li>\n<li>null</li>\n<li>0</li>\n<li>NaN</li>\n<li>”</li>\n<li>\"\"</li>\n</ul>\n<p>빈 배열과 빈 객체는 거짓 값이 아님</p>\n<p>객체는 Object.keys({}).length 로 구함</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">!</span>object<span class=\"token punctuation\">.</span>name\n하고\nobject<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token boolean\">true</span>\n둘다 <span class=\"token boolean\">false</span> 를 내보내는건 동일</code></pre></div>\n<p>전자는 falsy 한 값을 뽑는거고\n후자는 true 빼고 다 뽑는거</p>\n<h2 id=\"삼항-연산자로-빠르게-데이터를-확인하라\" style=\"position:relative;\"><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%98%EB%9D%BC\" aria-label=\"삼항 연산자로 빠르게 데이터를 확인하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삼항 연산자로 빠르게 데이터를 확인하라</h2>\n<p>삼항연산자를 안썻을 때, 유효 범위 충돌이 일어날 수 있음</p>\n<h2 id=\"단락-평가를-이용해-효율성을-극대화하라\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EB%9D%BD-%ED%8F%89%EA%B0%80%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%ED%9A%A8%EC%9C%A8%EC%84%B1%EC%9D%84-%EA%B7%B9%EB%8C%80%ED%99%94%ED%95%98%EB%9D%BC\" aria-label=\"단락 평가를 이용해 효율성을 극대화하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단락 평가를 이용해 효율성을 극대화하라</h2>\n<p>단락평가는 &#x26;&#x26; 또는 || 로 평가하는 방법을 말함</p>\n<p>배열에 값이 있는지 차근차근히 체크할수도있고\n기본값을 넣을 수 있다는 장점이 있음</p>\n<hr>\n<h1 id=\"반복문을-단순하게-만들어라\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EB%8B%A8%EC%88%9C%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"반복문을 단순하게 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문을 단순하게 만들어라</h1>\n<h2 id=\"화살표-함수로-반복문을-단순하게-만들어라\" style=\"position:relative;\"><a href=\"#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EB%8B%A8%EC%88%9C%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"화살표 함수로 반복문을 단순하게 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화살표 함수로 반복문을 단순하게 만들어라</h2>\n<p>단순하게 화살표 함수에 대해서 소개함.</p>\n<h2 id=\"배열-메서드로-반복문을-짧게-작성하라\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EC%A7%A7%EA%B2%8C-%EC%9E%91%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"배열 메서드로 반복문을 짧게 작성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 메서드로 반복문을 짧게 작성하라</h2>\n<ul>\n<li>let 의 블록 유효범위 때문에 컬렉션을 반복문 밖에 선언해야된다는 문제</li>\n<li>새로운 컬렉션을 선언하고 사용해야되는 문제</li>\n<li>배열의 길이를 변경하거나 배열 내 데이터 형태를 변경하는 등 한 번에 한 가지 기능만 하는게 제일 좋음</li>\n</ul>\n<h3 id=\"종류\" style=\"position:relative;\"><a href=\"#%EC%A2%85%EB%A5%98\" aria-label=\"종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>종류</h3>\n<ul>\n<li>map()</li>\n<li>sort()</li>\n<li>filter()</li>\n<li>find()</li>\n<li>forEach()</li>\n<li>reduce()</li>\n</ul>\n<h2 id=\"map-메서드로-비슷한-길이의-배열을-생성하라\" style=\"position:relative;\"><a href=\"#map-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%B9%84%EC%8A%B7%ED%95%9C-%EA%B8%B8%EC%9D%B4%EC%9D%98-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"map 메서드로 비슷한 길이의 배열을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>map() 메서드로 비슷한 길이의 배열을 생성하라</h2>\n<p>map 쓰는 방법에 대해서 소개함.</p>\n<h2 id=\"filter-와-find-로-데이터의-부분집합을-생성하라\" style=\"position:relative;\"><a href=\"#filter-%EC%99%80-find-%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EB%B6%80%EB%B6%84%EC%A7%91%ED%95%A9%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"filter 와 find 로 데이터의 부분집합을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>filter() 와 find() 로 데이터의 부분집합을 생성하라</h2>\n<ul>\n<li>\n<p>find() 는 참 값을 반환하는 첫번째 항목만 반환함</p>\n<ul>\n<li>반대로 항목이 없으면 undefined를 반환함</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"커링\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%81\" aria-label=\"커링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커링</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">findByLibaray</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">library</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">instructor</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> instructor<span class=\"token punctuation\">.</span>libraries<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>library<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> librarian <span class=\"token operator\">=</span> instructors<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token function\">findByLibrary</span><span class=\"token punctuation\">(</span><span class=\"token string\">'도서관'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"foreach-로-동일한-동작을-적용하라\" style=\"position:relative;\"><a href=\"#foreach-%EB%A1%9C-%EB%8F%99%EC%9D%BC%ED%95%9C-%EB%8F%99%EC%9E%91%EC%9D%84-%EC%A0%81%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"foreach 로 동일한 동작을 적용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>forEach() 로 동일한 동작을 적용하라</h2>\n<ul>\n<li>forEach() 는 반환값이 없음</li>\n<li>\n<p>함수의 유효 범위를 벗어나는 작업이 필요한 경우 사용하기</p>\n<ul>\n<li>즉, 부수 효과가 필요한 경우</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"체이닝으로-메서드를-연결하라\" style=\"position:relative;\"><a href=\"#%EC%B2%B4%EC%9D%B4%EB%8B%9D%EC%9C%BC%EB%A1%9C-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EC%97%B0%EA%B2%B0%ED%95%98%EB%9D%BC\" aria-label=\"체이닝으로 메서드를 연결하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>체이닝으로 메서드를 연결하라</h2>\n<h2 id=\"reduce-로-배열-데이터를-변환하라\" style=\"position:relative;\"><a href=\"#reduce-%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%B3%80%ED%99%98%ED%95%98%EB%9D%BC\" aria-label=\"reduce 로 배열 데이터를 변환하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reduce() 로 배열 데이터를 변환하라</h2>\n<h2 id=\"forin-문과-forof-문으로-반복문을-정리하라\" style=\"position:relative;\"><a href=\"#forin-%EB%AC%B8%EA%B3%BC-forof-%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EC%A0%95%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"forin 문과 forof 문으로 반복문을 정리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>for…in 문과 for…of 문으로 반복문을 정리하라</h2>\n<p>컬렉션을 배열로 바꿔서 사용할 수도 있다.</p>\n<hr>\n<h1 id=\"매개변수와-return-문을-정리하라\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EC%99%80-return-%EB%AC%B8%EC%9D%84-%EC%A0%95%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"매개변수와 return 문을 정리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매개변수와 return 문을 정리하라</h1>\n<h2 id=\"매개변수-기본값을-생성하라\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EA%B8%B0%EB%B3%B8%EA%B0%92%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"매개변수 기본값을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매개변수 기본값을 생성하라</h2>\n<p><code class=\"language-text\">const round = roundTo || 2</code> 은 올바른 방법이 아님 -> 0 은 false 로 평가되기 때문이다.</p>\n<h2 id=\"해체-할당으로-객체-속성에-접근하라\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EC%B2%B4-%ED%95%A0%EB%8B%B9%EC%9C%BC%EB%A1%9C-%EA%B0%9D%EC%B2%B4-%EC%86%8D%EC%84%B1%EC%97%90-%EC%A0%91%EA%B7%BC%ED%95%98%EB%9D%BC\" aria-label=\"해체 할당으로 객체 속성에 접근하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해체 할당으로 객체 속성에 접근하라</h2>\n<p>함수 매개변수로 값을 줄 때, 중간에 값을 줄 필요가 없는 경우가 있는데 그럴때, 쓸데없이 undefined 를 넣어서 방어를 해야된다는 단점이 있었음</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> landscape <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  location<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">103</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> location<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>lat<span class=\"token punctuation\">,</span> long<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> landscape<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"키-값-할당을-단순화하라\" style=\"position:relative;\"><a href=\"#%ED%82%A4-%EA%B0%92-%ED%95%A0%EB%8B%B9%EC%9D%84-%EB%8B%A8%EC%88%9C%ED%99%94%ED%95%98%EB%9D%BC\" aria-label=\"키 값 할당을 단순화하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>키-값 할당을 단순화하라</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">setRegion</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>details<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> city<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">determiceCityAndState</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    city<span class=\"token punctuation\">,</span>\n    state<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>abbreviation<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>details\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"나머지-매개변수로-여러-개의-인수를-변수로-전달하라\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%A8%B8%EC%A7%80-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A1%9C-%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EC%9D%B8%EC%88%98%EB%A5%BC-%EB%B3%80%EC%88%98%EB%A1%9C-%EC%A0%84%EB%8B%AC%ED%95%98%EB%9D%BC\" aria-label=\"나머지 매개변수로 여러 개의 인수를 변수로 전달하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나머지 매개변수로 여러 개의 인수를 변수로 전달하라</h2>\n<p>파라미터로 전개 연산자를 쓰면, 배열로 담기게 된다.</p>\n<p>아니면 배열을 펼쳐 넣어 함수를 호출 할 수도 있음</p>\n<p>음.. 중요한건 펼쳐진데는데 있다. 파라미터 값으로 배열이 들어오던 인수들이 들어오던 간에 전개 연산자를 통해 들어오면 배열로 만들어 준다.</p>\n<h3 id=\"나머지-인수를-사용하는-이유\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%A8%B8%EC%A7%80-%EC%9D%B8%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"나머지 인수를 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나머지 인수를 사용하는 이유</h3>\n<ol>\n<li>인수를 배열로 다루는 것을 다른 개발자들에게 알려야 하는 경우</li>\n<li>나머지 매개변수는 코드 디버깅에 좋은 방법</li>\n<li>예로 나머지 매개변수를 이용해서 추가 매개변수를 가져오는 것으로 의심되는 라이브러리 함수를 해석하는 데 도움을 얻을 수 있고, 길게 나열된 인수를 확인할 수도 있음</li>\n<li>나머지 인수는 함수 간에 속성을 전달하면서 해당 속성을 조작할 필요가 없을 때 사용하면 좋음</li>\n</ol>\n<hr>\n<h1 id=\"유연한-함수를-만들어라\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%97%B0%ED%95%9C-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"유연한 함수를 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유연한 함수를 만들어라</h1>\n<h2 id=\"테스트하기-쉬운-함수를-작성하라\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"테스트하기 쉬운 함수를 작성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트하기 쉬운 함수를 작성하라</h2>\n<ul>\n<li>코드에 테스트를 작성하느라 골치를 썩이기보다는 테스트할 수 있는 코드를 작성하는 것에 집중해야한다.</li>\n<li>\n<p>스텁을 사용할 때의 장점</p>\n<ul>\n<li>어떤 종류든 외부 의존성을 걱정할 필요가 없어짐</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"스텁\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%81\" aria-label=\"스텁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텁</h3>\n<p>외부 코드를 덮어 써서 명시적인 결과를 반환함</p>\n<p>내부 논리를 모두 제거하고 결과만 선언함</p>\n<h3 id=\"모의-객체\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98-%EA%B0%9D%EC%B2%B4\" aria-label=\"모의 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의 객체</h3>\n<p>원본 객체를 대체해 호출, 원본 객체가 수신할 메시지와 호출할 메서드를 바탕으로 단언문을 작성함</p>\n<h4 id=\"스텁과-모의-객체-차이\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%81%EA%B3%BC-%EB%AA%A8%EC%9D%98-%EA%B0%9D%EC%B2%B4-%EC%B0%A8%EC%9D%B4\" aria-label=\"스텁과 모의 객체 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텁과 모의 객체 차이</h4>\n<p>모의 객체를 사용할 때는 코드를 호출하기 전에 기댓값을 설정 함</p>\n<h2 id=\"화살표-함수로-복잡도를-낮춰라\" style=\"position:relative;\"><a href=\"#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B3%B5%EC%9E%A1%EB%8F%84%EB%A5%BC-%EB%82%AE%EC%B6%B0%EB%9D%BC\" aria-label=\"화살표 함수로 복잡도를 낮춰라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화살표 함수로 복잡도를 낮춰라</h2>\n<ul>\n<li>해체 할당으로 화살표 함수에 파라미터로 넘길 때 소괄호 주의할 것</li>\n<li>리턴할 때도 객체를 반환하는지 함수를 여는 것인지 주의해야함</li>\n</ul>\n<h3 id=\"고차함수\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%B0%A8%ED%95%A8%EC%88%98\" aria-label=\"고차함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고차함수</h3>\n<ul>\n<li>고차함수는 그저 다른 함수를 반환하는 함수일 뿐!</li>\n<li>매개변수를 가두는데 사용 할 수 있음</li>\n</ul>\n<blockquote>\n<p>고차함수는 언제 사용할까요?</p>\n</blockquote>\n<h2 id=\"부분-적용-함수로-단일-책임-매개변수를-관리하라\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EB%B6%84-%EC%A0%81%EC%9A%A9-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%8B%A8%EC%9D%BC-%EC%B1%85%EC%9E%84-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"부분 적용 함수로 단일 책임 매개변수를 관리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부분 적용 함수로 단일 책임 매개변수를 관리하라</h2>\n<p>고차함수와 관련있음</p>\n<p>만약 매개변수가 3개인 함수가 있고, 2개는 동일하게 쓰는 상황이라면, 고차함수로 빼볼 생각도 좋음</p>\n<h2 id=\"커링과-배열-메서드를-조합한-부분-적용-함수를-사용하라\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%81%EA%B3%BC-%EB%B0%B0%EC%97%B4-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EC%A1%B0%ED%95%A9%ED%95%9C-%EB%B6%80%EB%B6%84-%EC%A0%81%EC%9A%A9-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"커링과 배열 메서드를 조합한 부분 적용 함수를 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커링과 배열 메서드를 조합한 부분 적용 함수를 사용하라</h2>\n<p>한 번에 인수를 하나만 받는 함수를 커링이라고 한다.</p>\n<blockquote>\n<p>커링과 부분적용함수와 차이점은 인수를 몇개 받느냐 차이, 그래서 차이점이 뭔데?</p>\n</blockquote>\n<h2 id=\"화살표-함수로-문맥-혼동을-피하라\" style=\"position:relative;\"><a href=\"#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%AC%B8%EB%A7%A5-%ED%98%BC%EB%8F%99%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"화살표 함수로 문맥 혼동을 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화살표 함수로 문맥 혼동을 피하라</h2>\n<p>화살표 함수를 이용하여 this 바인딩을 새로 만들지 않도록 하기</p>\n<p>화살표 함수는 이미 문맥이 있고 다른 함수 내부에서 이 함수를 사용하려고 할 때 유용함</p>\n<hr>\n<h1 id=\"클래스로-인터페이스를-간결하게-유지하라\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EA%B0%84%EA%B2%B0%ED%95%98%EA%B2%8C-%EC%9C%A0%EC%A7%80%ED%95%98%EB%9D%BC\" aria-label=\"클래스로 인터페이스를 간결하게 유지하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스로 인터페이스를 간결하게 유지하라</h1>\n<h2 id=\"읽기-쉬운-클래스를-만들어라\" style=\"position:relative;\"><a href=\"#%EC%9D%BD%EA%B8%B0-%EC%89%AC%EC%9A%B4-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"읽기 쉬운 클래스를 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>읽기 쉬운 클래스를 만들어라</h2>\n<ul>\n<li>자바스크립트는 프로토타입 기반의 언어</li>\n<li>클래스는 단순히 복잡한 개념을 숨겨놓고 익숙한 문법으로 사용할 수 있게 해준 것 뿐</li>\n<li>클래스에 화살표 함수와 보통 함수와 다른 동작을 한다.(TIP 36 화살표 함수로 문맥 혼동을 피하라 부분)</li>\n<li>클래스에서 화살표 함수를 사용하는 방법은 bind() 로 문맥 문제를 해결 할 수 있다.</li>\n<li>클래스 메서드를 클래스의 인스턴스에서 호출하면 this 문맥에 접근 할 수 있음 (인스턴스 말하는 것임)</li>\n</ul>\n<h3 id=\"클래스-생성자의-역할\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%9D%EC%84%B1%EC%9E%90%EC%9D%98-%EC%97%AD%ED%95%A0\" aria-label=\"클래스 생성자의 역할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 생성자의 역할</h3>\n<ul>\n<li>this 문맥을 생성하는 것</li>\n</ul>\n<h2 id=\"상속으로-메서드를-공유하라\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9C%BC%EB%A1%9C-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EA%B3%B5%EC%9C%A0%ED%95%98%EB%9D%BC\" aria-label=\"상속으로 메서드를 공유하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속으로 메서드를 공유하라</h2>\n<ul>\n<li>상속 시 자바와 비슷하게, 부모 메서드를 덮어서 사용할 수 있음(단 자바랑 다름!)</li>\n<li>해당 문맥에 호출할 메서드가 없다면 상속 연결의 상위로 올라가서 찾는 작업을 수행함</li>\n</ul>\n<h2 id=\"클래스로-기존의-프로토타입을-확장하라\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EA%B8%B0%EC%A1%B4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%84-%ED%99%95%EC%9E%A5%ED%95%98%EB%9D%BC\" aria-label=\"클래스로 기존의 프로토타입을 확장하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스로 기존의 프로토타입을 확장하라</h2>\n<p>new 키워드를 이용해서 새로운 인스턴스를 생성할 때는 함수를 생성자로 사용하고 this 문맥을 바인딩한다.</p>\n<h3 id=\"루비와-비교하기\" style=\"position:relative;\"><a href=\"#%EB%A3%A8%EB%B9%84%EC%99%80-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0\" aria-label=\"루비와 비교하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>루비와 비교하기</h3>\n<p>클래스는 기본적으로 객체의 청사진인데, 새로운 인스턴스를 생성할 때, 차이가 있다.\n루비 같은 경우 새로운 인스턴스를 생성할 때, 새로운 객체에 모든 속성과 메서드가 복제 되지만, 자바스크립트는 프로토타입 언어인데, 새로운 인스턴스를 생성할 때 <code class=\"language-text\">메서드</code> 를 복제하지 않는다. 그 대신 프로토타입에 대한 연결을 생성한다.</p>\n<h2 id=\"get과-set으로-인터페이스를-단순하게-만들어라\" style=\"position:relative;\"><a href=\"#get%EA%B3%BC-set%EC%9C%BC%EB%A1%9C-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EB%8B%A8%EC%88%9C%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"get과 set으로 인터페이스를 단순하게 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>get과 set으로 인터페이스를 단순하게 만들어라</h2>\n<ul>\n<li>메서드 앞에 get() 과 set() 을 사용할 수\n있음, 그럼 호출 할 때, 괄호를 쓰지 않고 실행할 수 있음(마치 속성처럼 작동함)</li>\n</ul>\n<h2 id=\"제네레이터로-이터러블-속서을-생성하라\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EB%84%A4%EB%A0%88%EC%9D%B4%ED%84%B0%EB%A1%9C-%EC%9D%B4%ED%84%B0%EB%9F%AC%EB%B8%94-%EC%86%8D%EC%84%9C%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"제네레이터로 이터러블 속서을 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제네레이터로 이터러블 속서을 생성하라</h2>\n<ul>\n<li>제네레이터는 중단점이 있는 함수</li>\n<li>next() 로 접근 가능, yield 키워드를 이용해 정보 반환도 함</li>\n<li>next() 시 value 와 done 의 객체를 가져옴</li>\n</ul>\n<p>중요한건!</p>\n<p>제네레이터가 함수를 이터러블로 바꿔준다는 점</p>\n<h3 id=\"메서드를-제너레이터로-바꾸기\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EC%A0%9C%EB%84%88%EB%A0%88%EC%9D%B4%ED%84%B0%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"메서드를 제너레이터로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드를 제너레이터로 바꾸기</h3>\n<p><code class=\"language-text\">getMethod()</code> 대신 <code class=\"language-text\">* [Symbol.iterator]()</code> 로 바꾸기</p>\n<h2 id=\"bind-로-문맥-문제를-해결하라\" style=\"position:relative;\"><a href=\"#bind-%EB%A1%9C-%EB%AC%B8%EB%A7%A5-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%9D%BC\" aria-label=\"bind 로 문맥 문제를 해결하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bind() 로 문맥 문제를 해결하라</h2>\n<ul>\n<li>화살표 함수는 새로운 this 연결을 생성하지 않는다.</li>\n<li>생성자에서 함수에 bind() 걸어서 this 를 유지할 수 있음</li>\n</ul>\n<hr>\n<h1 id=\"외부-데이터에-접근하라\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%97%90-%EC%A0%91%EA%B7%BC%ED%95%98%EB%9D%BC\" aria-label=\"외부 데이터에 접근하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부 데이터에 접근하라</h1>\n<p>페이지를 한 번 불러오면 이후로는 자바스크립트를 이용해서 서버와 주고받는 모든 통신을 처리할 수 있다는 장점이 있다.</p>\n<p>비동기 요청을 다루기 위한 방법 중 <code class=\"language-text\">프로미스(promise)</code> 가 있다.</p>\n<p>그 후 새로 나온 문법으로 <code class=\"language-text\">async/await</code> 가 있으며, 좀 더 간결하게 코드를 구성할 수 있게 되었다. (콜백 지옥에서 벗어날 수 있다)</p>\n<h2 id=\"프라미스를-이용해-비동기적으로-데이터를-가져오라\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%9D%BC%EB%AF%B8%EC%8A%A4%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%B0%80%EC%A0%B8%EC%98%A4%EB%9D%BC\" aria-label=\"프라미스를 이용해 비동기적으로 데이터를 가져오라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프라미스를 이용해 비동기적으로 데이터를 가져오라</h2>\n<p>프로미스가 등장하기 전에는 콜백 함수를 사용하여 비동기 작업을 처리했다.</p>\n<p>하지만, 콜백 함수가 중첩이 되는 경우가 많았고, 콜백 지옥에 빠지는 경우가 많았다.</p>\n<p>Promise는 호출에 성공할 경우 resolve()를 호출하게 되면, 이 메서드는 then() 메서드를 호출하게 된다. 반면에 오류가 날 경우 또는 reject()를 호출하면 catch() 메서드에서 처리하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> pre <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promsie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token string\">'이렇게 데이터를!!'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npre<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이렇게 데이터를!!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"asyncawait-로-함수를-명료하게-생성하라\" style=\"position:relative;\"><a href=\"#asyncawait-%EB%A1%9C-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%AA%85%EB%A3%8C%ED%95%98%EA%B2%8C-%EC%83%9D%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"asyncawait 로 함수를 명료하게 생성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>async/await 로 함수를 명료하게 생성하라</h2>\n<p>ES2017 스펙이다.</p>\n<p><code class=\"language-text\">async/await</code> 가 <code class=\"language-text\">프로미스</code> 를 대체하지는 않는다.</p>\n<p>단지, 프로미스를 더 나은 문법으로 감싸는 것에 불과하다.</p>\n<p>브라우저 지원이 충분하지 않다. 익스 친구 같은 경우는 빼엑 소리를 지르고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getTheData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>반환값으로 프로미스가 반환된다. 그렇기 때문에 then(), catch() 를 이어서 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">getFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">async/await</code> 는 여러개의 프로미스를 연결 했을 때, 강력!하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFunc2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getItemId</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> relations <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getRelationsById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> relations<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"fetch로-간단한-ajax-호출을-처리하라\" style=\"position:relative;\"><a href=\"#fetch%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-ajax-%ED%98%B8%EC%B6%9C%EC%9D%84-%EC%B2%98%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"fetch로 간단한 ajax 호출을 처리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fetch로 간단한 AJAX 호출을 처리하라</h2>\n<p>fetch() 는 익스플로에서 뺴엑 소리를 지르며 안된다.</p>\n<p>다양한 믹스인 형태로 데이터를 반환해주는데, data.json() 으로 반환하여주면 json 형태로 반환된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://jsonplaceholder.typicode.com/todos/1'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">json</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"fetch-주의-할-점\" style=\"position:relative;\"><a href=\"#fetch-%EC%A3%BC%EC%9D%98-%ED%95%A0-%EC%A0%90\" aria-label=\"fetch 주의 할 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fetch 주의 할 점</h3>\n<p>주의할 점이 있다.</p>\n<p>fetch() 같은 경우 상태 코드가 <code class=\"language-text\">404</code> 여서 요청에 실패한 경우에도 응답 본문을 반환한다는 것이다.</p>\n<p>그래서 catch() 만으로 응답 실패를 처리할 수 없다.</p>\n<p>그래서 다음 코드와 같이 조건문을 추가해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://jsonplaceholder.typicode.com/todos/1'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">json</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"json-데이터-보내기\" style=\"position:relative;\"><a href=\"#json-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%B4%EB%82%B4%EA%B8%B0\" aria-label=\"json 데이터 보내기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON 데이터 보내기</h3>\n<p>GET 메서드 말고 POST 메서드로 보내보자.</p>\n<p>JSON 데이터 형태로 보내기 위해서는 서버에게 <code class=\"language-text\">이 데이터는 json 형태야</code> 라고 말할 필요가 있다. 이를 fetch 두번째 파라미터에 객체로 전달하면 된다.\n(변수로 빼도 된다.)</p>\n<p>JSON.stringify() 를 적극 사용하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://jsonplaceholder.typicode.com/todos/1'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">json</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"localstorage-로-상태를-장기간-유지하라\" style=\"position:relative;\"><a href=\"#localstorage-%EB%A1%9C-%EC%83%81%ED%83%9C%EB%A5%BC-%EC%9E%A5%EA%B8%B0%EA%B0%84-%EC%9C%A0%EC%A7%80%ED%95%98%EB%9D%BC\" aria-label=\"localstorage 로 상태를 장기간 유지하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>localStorage 로 상태를 장기간 유지하라</h2>\n<p>책에는 안나와있지만, 요즘에는 테마를 사용자가 직접 설정할 수 있게 많이 제공되어지는 것 같다. 일명!! 모드 다크모드~ 이 부분을 로컬스토리지에서 해결 할 수 있다.\nlocalStorage 를 이용하면, 사용자 정보를 쉽게 저장할 수 있다는 장점이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"localstroage의-단점\" style=\"position:relative;\"><a href=\"#localstroage%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"localstroage의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>localStroage의 단점</h3>\n<p>저장되는 값은 무조건 문자열이여야 한다.\n그래서 저장할 땐, JSON.stringify() 로 저장하고 가져와서 JSON.parse() 를 이용하자.</p>\n<h2 id=\"레퍼런스\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4\" aria-label=\"레퍼런스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레퍼런스</h2>\n<ul>\n<li><a href=\"https://github.com/node-fetch/node-fetch\">node-fetch github</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Fetch_API/Fetch%EC%9D%98_%EC%82%AC%EC%9A%A9%EB%B2%95\">Using Fetch</a></li>\n<li><a href=\"https://jsonplaceholder.typicode.com/\">typicode-jsonplaceholder</a></li>\n<li><a href=\"https://fetch.spec.whatwg.org/\">Fetch Spec</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Window/sessionStorage\">sessionStorage MDN</a></li>\n</ul>\n<h2 id=\"시험\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%97%98\" aria-label=\"시험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시험</h2>\n<ul>\n<li>프로미스가 무엇인가?</li>\n<li>프로미스의 장점은 무엇인가?</li>\n<li>async/await의 장점은 무엇인가?</li>\n<li>fetch() 의 주의할 점은 무엇인가?</li>\n<li>localStorage 랑 sessionStorage 의 차이는 무엇인가?</li>\n</ul>\n<hr>\n<h1 id=\"컴포넌트-아키텍처를-이용해-관련-파일을-모아라\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EA%B4%80%EB%A0%A8-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EB%AA%A8%EC%95%84%EB%9D%BC\" aria-label=\"컴포넌트 아키텍처를 이용해 관련 파일을 모아라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 아키텍처를 이용해 관련 파일을 모아라</h1>\n<blockquote>\n<p>전술 : 당면한 문제를 해결, 전략 : 다가올 문제를 예상</p>\n</blockquote>\n<h2 id=\"가져오기와-내보내기로-기능을-분리하라\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0%EC%99%80-%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0%EB%A1%9C-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EB%B6%84%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"가져오기와 내보내기로 기능을 분리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가져오기와 내보내기로 기능을 분리하라</h2>\n<p>기존에는 자바스크립트 코드를 한 파일에 담았었다.</p>\n<p>그리고 분리의 필요성이 다다르자. Require.js 와 CommonJs 와 같은 프로젝트가 모듈을 이용해서 파일 간에 코드를 공유할 수 있는 방법을 제시했다.</p>\n<p>함수, 변수, 클래스를 내보낼 수 있다.</p>\n<p>모든 것을 내보낼 필요는 없다.</p>\n<h3 id=\"export-를-통해-내보낼-수-있다\" style=\"position:relative;\"><a href=\"#export-%EB%A5%BC-%ED%86%B5%ED%95%B4-%EB%82%B4%EB%B3%B4%EB%82%BC-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"export 를 통해 내보낼 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export 를 통해 내보낼 수 있다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// filename : what.js</span>\n<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"import-를-통해-가져올-수-있다\" style=\"position:relative;\"><a href=\"#import-%EB%A5%BC-%ED%86%B5%ED%95%B4-%EA%B0%80%EC%A0%B8%EC%98%AC-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"import 를 통해 가져올 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>import 를 통해 가져올 수 있다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./what'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"-을-통해-변수명을-변경하여-사용할-수도-있다\" style=\"position:relative;\"><a href=\"#-%EC%9D%84-%ED%86%B5%ED%95%B4-%EB%B3%80%EC%88%98%EB%AA%85%EC%9D%84-%EB%B3%80%EA%B2%BD%ED%95%98%EC%97%AC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98%EB%8F%84-%EC%9E%88%EB%8B%A4\" aria-label=\" 을 통해 변수명을 변경하여 사용할 수도 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>* 을 통해 변수명을 변경하여 사용할 수도 있다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> otherName <span class=\"token keyword\">from</span> <span class=\"token string\">'./what'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>otherName<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 함수에 바로 export 를 앞에다가 적어주어 사용할 수도 있다.</p>\n<h3 id=\"export-default-로-기본으로-내보낼수도-있다\" style=\"position:relative;\"><a href=\"#export-default-%EB%A1%9C-%EA%B8%B0%EB%B3%B8%EC%9C%BC%EB%A1%9C-%EB%82%B4%EB%B3%B4%EB%82%BC%EC%88%98%EB%8F%84-%EC%9E%88%EB%8B%A4\" aria-label=\"export default 로 기본으로 내보낼수도 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export default 로 기본으로 내보낼수도 있다</h3>\n<p><code class=\"language-text\">export default</code> 로 내보낸다면 <code class=\"language-text\">import</code> 할 때 괄호를 사용안하며 가져올 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> data<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> data <span class=\"token keyword\">from</span> <span class=\"token string\">'./what'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>이 부분은 책 초반에 나오면 좋을 듯하다.</p>\n</blockquote>\n<h2 id=\"npm으로-커뮤니티-코드를-끌어와라\" style=\"position:relative;\"><a href=\"#npm%EC%9C%BC%EB%A1%9C-%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0-%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%81%8C%EC%96%B4%EC%99%80%EB%9D%BC\" aria-label=\"npm으로 커뮤니티 코드를 끌어와라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm으로 커뮤니티 코드를 끌어와라</h2>\n<p>당연한 것들을 서술하고 있어서, 작성할 부분이 없다.</p>\n<p>npm init 하는 것과 패키지 설치하는 부분이 다였다.</p>\n<h2 id=\"컴포넌트-아키텍처를-이용해-애플리케이션을-만들어라\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"컴포넌트 아키텍처를 이용해 애플리케이션을 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 아키텍처를 이용해 애플리케이션을 만들어라</h2>\n<p>컴포넌트 아키텍처 : 컴포넌트와 관련된 모든 코드를 조합해 하나의 디렉터리에 담은 것</p>\n<blockquote>\n<p>쓸데없이 create react app 에 대해서 작성된 코드를 설명하고 있는 듯한 기분\n결론적으로 컴포넌트 아키텍처를 이용하면 코드를 직관적으로 이용하기 쉽다는 장점이 있다는 것이다.</p>\n</blockquote>\n<p>하지만, 여러가지 파일을 결합해주는 훌륭한 도구가 필요하다(webpack?)</p>\n<p>또한 컴포넌트 아키텍처는 브라우저의 내장 기능만으로 지원되지 않는 문제가 있다.</p>\n<h2 id=\"빌드-도구를-이용해-컴포넌트를-결합하라\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C-%EB%8F%84%EA%B5%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EA%B2%B0%ED%95%A9%ED%95%98%EB%9D%BC\" aria-label=\"빌드 도구를 이용해 컴포넌트를 결합하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드 도구를 이용해 컴포넌트를 결합하라</h2>\n<p>ES6 문법과 JSX, import, export 문을 브라우저 호환에 맞게 변경이 필요하다.</p>\n<p>이를 도와주는 것이 <code class=\"language-text\">바벨(Babel)</code></p>\n<ul>\n<li>@babel/preset-env -> ES6+ -> ES5~</li>\n<li>@babel/preset-react -> JSX -> JS</li>\n</ul>\n<p>.babelrc 안에 사용할 플러그인을 적어준다.</p>\n<p><code class=\"language-text\">{ &quot;presets&quot;: [&quot;@babel/preset-env&quot;, &quot;@babel/preset-react&quot; ] }</code></p>\n<p>바벨은 코드를 변환하지만, 가져오기와 내보내기를 처리하는 모듈로더는 내장되어 있지 않다.</p>\n<h3 id=\"js-loader\" style=\"position:relative;\"><a href=\"#js-loader\" aria-label=\"js loader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>js loader</h3>\n<p>그래서 웹팩을 이용해보자.</p>\n<ul>\n<li>babel-loader</li>\n<li>webpack-cli</li>\n</ul>\n<p>webpack.config.js 파일도 추가하기</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// webpack.config.js</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js?/</span><span class=\"token punctuation\">,</span>\n                use<span class=\"token operator\">:</span> <span class=\"token string\">'babel-lodaer'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        filename<span class=\"token operator\">:</span> <span class=\"token string\">'build/bundle.js'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"css-loader\" style=\"position:relative;\"><a href=\"#css-loader\" aria-label=\"css loader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css loader</h3>\n<p>이렇게 하면 브라우저에서 자바스크립트를 사용할 수 있게 되고, CSS는 아직이다.</p>\n<p>css-loader 와 style-loader 를 사용하여 css 도 처리할 수 있도록 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.css/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-lodaer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-lodaer'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"이미지-처리\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%98%EB%A6%AC\" aria-label=\"이미지 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지 처리</h3>\n<p>이미지 처리는 file-loader 를 사용해서 처리할 수 있다.</p>\n<p>(객체를 넘겨서 사용할 수도 있다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.svg/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                loader<span class=\"token operator\">:</span> <span class=\"token string\">'file-loader'</span><span class=\"token punctuation\">,</span>\n                options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    outputPath<span class=\"token operator\">:</span> <span class=\"token string\">'build/'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"css-애니메이션을-활용하라\" style=\"position:relative;\"><a href=\"#css-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"css 애니메이션을 활용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 애니메이션을 활용하라</h2>\n<blockquote>\n<p>뭔가 갑자기 뜬금없는 CSS 애니메이션?\n예전에는 자바스크립트를 이용해서 애니메이션 구현을 많이 했다.</p>\n</blockquote>\n<p>하지만 요즘은 CSS 가 발전함에 따라서 CSS 만으로도 다양한 애니메이션을 구현할 수 있게 되었다.</p>\n<p>transform 과 transition 을 이용하여 애니메이션을 구현할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.main</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> black solid 1px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 2em<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> black solid 1px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>100% - 2px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/* //START:transition */</span>\n    <span class=\"token selector\">.menu.display</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* Other styles */</span>\n      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">transition-property</span><span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">transition-duration</span><span class=\"token punctuation\">:</span> 600ms<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">transition-timing-function</span><span class=\"token punctuation\">:</span> linear<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/* //END:transition */</span>\n    <span class=\"token comment\">/* //START:short */</span>\n    <span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* Other styles */</span>\n      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>300px + 4em + 2px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 600ms linear<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/* //END:short */</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Moby Dick<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>See More<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sidebar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Other Works<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Bartleby, the Scrivener<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Billy Budd<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n          Call me Ishmael.\n          <span class=\"token comment\">&lt;!-- More content --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">const</span> sidebar <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sidebar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"show\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        sidebar<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"자바스크립트 코딩의 기술 정리하기","date":"06월 09일, 2020"}}},"pageContext":{"slug":"/study/javascript-coding-skill/","previous":{"fields":{"slug":"/tip/sdkman-install-and-using-jdk-and-maven/"},"frontmatter":{"title":"Sdkman을 이용해 JDK & Maven 설치 및 관리하기","category":"tip","draft":false}},"next":{"fields":{"slug":"/study/jest-matchers/"},"frontmatter":{"title":"Jest의 Matchers 간단하게 살펴보기","category":"study","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}